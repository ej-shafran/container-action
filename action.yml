name: "Container Action"
description: "Starts and stops a Docker container"
branding:
  icon: "box"
  color: "blue"
inputs:
  docker-options:
    description: "Additional CLI options to pass to the `docker run` command"
    required: false
    default: ""
  image:
    description: "The image to run"
    required: true
  name:
    description: "The container's name"
    required: true
outputs:
  container-id:
    description: "The container's ID"

runs:
  using: "composite"
  steps:
    - name: "Check Docker Installation"
      id: "check-docker"
      run: |
        if ! command -v docker &> /dev/null; then
          echo "Could not find `docker` command"
          exit 1
        fi
      shell: "bash"

    - name: "Start Container"
      id: "start-container"
      run: |
        CONTAINER_ID="$(docker run ${{ inputs.docker-options }} --rm --name=${{ inputs.name }} -d ${{ inputs.image }})"
        if [ -z "$CONTAINER_ID" ]; then
          echo "Failed to start container"
          exit 1
        else
          echo "Container started with ID: $CONTAINER_ID"
          echo "container-id=$CONTAINER_ID" >> $GITHUB_OUTPUT
        fi
      shell: "bash"

    - name: "Cleanup"
      uses: "webiny/action-post-run@3.1.0"
      id: "post-run-command"
      if: "${{ steps.start-container.outputs.container-id }}"
      with:
        run: |
          docker stop ${{ steps.start-container.outputs.container-id }}

    - name: "Set Output"
      run: |
        echo "container-id=${{ steps.start-container.outputs.container-id }}" >> $GITHUB_OUTPUT
      shell: "bash"
